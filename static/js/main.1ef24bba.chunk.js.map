{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","preparedList","list","sortedList","sort","a","b","localeCompare","length","reverse","prepareList","className","type","onClick","map","good","id","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAiB,SAuBVC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBY,SAACC,EAAML,EAAUE,GACnC,IAAMI,EAAU,YAAOD,GAEvB,OAAQL,GACN,KAAKJ,EACHU,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC1C,MACF,KAAKZ,EACHS,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU3C,OAJIT,GACFI,EAAWM,UAGNN,EAOcO,CAAYlB,EAAiBK,EAAUE,GAO5D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAaJ,EAAe,GAAK,YAC9DoB,QAAS,kBAAMf,EAAYL,IAH7B,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBd,IAAaH,EAAiB,GAAK,YACnEmB,QAAS,kBAAMf,EAAYJ,IAH7B,4BAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBZ,EAAa,GAAK,YAClDc,QAAS,kBAAMb,GAAeD,IAHhC,sBAQEF,GAAYE,IAEV,wBACEa,KAAK,SACLD,UAAU,4BACVE,QArCQ,WAClBf,EAAY,IACZE,GAAc,IAgCN,sBAWN,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAkB,UAAQ,OAA1B,SAAkCA,GAAzBA,EAAKC,aC3FxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ef24bba.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nconst prepareList = (list, sortType, isReversed) => {\n  const sortedList = [...list];\n\n  switch (sortType) {\n    case SORT_BY_NAME:\n      sortedList.sort((a, b) => a.localeCompare(b));\n      break;\n    case SORT_BY_LENGTH:\n      sortedList.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedList.reverse();\n  }\n\n  return sortedList;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedList = prepareList(goodsFromServer, sortType, isReversed);\n\n  const handleReset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SORT_BY_NAME ? '' : 'is-light'}`}\n          onClick={() => setSortType(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SORT_BY_LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {preparedList.map(good => (\n          <li key={good.id} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}